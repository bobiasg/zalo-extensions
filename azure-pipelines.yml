# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  pnpm_config_cache: $(Pipeline.Workspace)/.pnpm-store

stages:
  - stage: Build
    jobs:
      - job: BuildJob
        steps:
          - task: Cache@2
            inputs:
              key: 'pnpm | "$(Agent.OS)" | "$(Build.SourceBranchName)" | pnpm-lock.yaml'
              path: $(pnpm_config_cache)
            displayName: Cache pnpm

          - script: |
              corepack enable
              corepack prepare pnpm@latest-9 --activate
              pnpm config set store-dir $(pnpm_config_cache)
            displayName: 'Setup pnpm'

          - script: |
              pnpm install
              pnpm run build
            displayName: 'pnpm install and build'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: 'dist'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/zalo.zip'
              replaceExistingArchive: true
            displayName: 'Zip dist folder'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/zalo.zip'
              ArtifactName: 'zalo'
              publishLocation: 'Container'
            displayName: 'Upload artifact'
            continueOnError: true
            condition: succeededOrFailed()

  - stage: Deploy

    variables:
      - group: TelegramBot
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    displayName: 'Dev Deployment'
    jobs:
      - deployment: DeployToDev
        environment: dev
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo "Checking if file exists at $(Build.ArtifactStagingDirectory)/zalo.zip"
                    ls -l $(Build.ArtifactStagingDirectory)/zalo.zip
                    echo "Sending artifact to Telegram"
                    curl -F "document=@$(Build.ArtifactStagingDirectory)/zalo.zip" -F chat_id=$(TelegramChatID) -F caption="Here is the zalo.zip artifact" https://api.telegram.org/bot$(TelegramBotToken)/sendDocument
                  displayName: 'Send artifact to Telegram'
                  env:
                    TelegramBotToken: $(TelegramBotToken)
                    TelegramChatID: $(TelegramChatID)
